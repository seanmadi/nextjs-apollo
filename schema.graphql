type Artist {
  createdAt: ISO8601DateTime!
  email: String
  firstName: String
  fullName: String
  id: ID!
  items: [Item!]!
  lastName: String
  updatedAt: ISO8601DateTime!
}

"""
Autogenerated input type of ArtistCreate
"""
input ArtistCreateInput {
  artistInput: ArtistInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated return type of ArtistCreate.
"""
type ArtistCreatePayload {
  artist: Artist!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of ArtistDelete
"""
input ArtistDeleteInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ArtistDelete.
"""
type ArtistDeletePayload {
  artist: Artist!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

input ArtistInput {
  email: String!
  firstName: String!
  lastName: String!
}

"""
Autogenerated input type of ArtistUpdate
"""
input ArtistUpdateInput {
  artistInput: ArtistInput!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ArtistUpdate.
"""
type ArtistUpdatePayload {
  artist: Artist!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

type Authenticatable {
  email: String!
}

type Credential {
  accessToken: String!
  client: String!
  expiry: Int!
  tokenType: String!
  uid: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type Item {
  artist: Artist!
  createdAt: ISO8601DateTime!
  description: String
  id: ID!
  imageUrl: String
  title: String
  updatedAt: ISO8601DateTime!
}

type Mutation {
  """
  Creates a new artist
  """
  artistCreate(
    """
    Parameters for ArtistCreate
    """
    input: ArtistCreateInput!
  ): ArtistCreatePayload

  """
  Deletes a artist by ID
  """
  artistDelete(
    """
    Parameters for ArtistDelete
    """
    input: ArtistDeleteInput!
  ): ArtistDeletePayload

  """
  Updates a artist by id
  """
  artistUpdate(
    """
    Parameters for ArtistUpdate
    """
    input: ArtistUpdateInput!
  ): ArtistUpdatePayload
  userConfirmRegistrationWithToken(
    confirmationToken: String!
  ): UserConfirmRegistrationWithTokenPayload
  userLogin(email: String!, password: String!): UserLoginPayload
  userLogout: UserLogoutPayload
  userRegister(
    confirmUrl: String
    email: String!
    password: String!
    passwordConfirmation: String!
  ): UserRegisterPayload
  userResendConfirmationWithToken(
    confirmUrl: String!
    email: String!
  ): UserResendConfirmationWithTokenPayload
  userSendPasswordResetWithToken(
    email: String!
    redirectUrl: String!
  ): UserSendPasswordResetWithTokenPayload
  userUpdatePasswordWithToken(
    password: String!
    passwordConfirmation: String!
    resetPasswordToken: String!
  ): UserUpdatePasswordWithTokenPayload
}

type Query {
  """
  Return a list of artists
  """
  artists: [Artist!]!

  """
  Return a list of items
  """
  items: [Item!]!
}

"""
Autogenerated return type of UserConfirmRegistrationWithToken.
"""
type UserConfirmRegistrationWithTokenPayload {
  authenticatable: Authenticatable!

  """
  Authentication credentials. Null unless user is signed in after confirmation.
  """
  credentials: Credential
}

"""
Autogenerated return type of UserLogin.
"""
type UserLoginPayload {
  authenticatable: Authenticatable!
  credentials: Credential!
}

"""
Autogenerated return type of UserLogout.
"""
type UserLogoutPayload {
  authenticatable: Authenticatable!
}

"""
Autogenerated return type of UserRegister.
"""
type UserRegisterPayload {
  authenticatable: Authenticatable!

  """
  Authentication credentials. Null if after signUp resource is not active for
  authentication (e.g. Email confirmation required).
  """
  credentials: Credential
}

"""
Autogenerated return type of UserResendConfirmationWithToken.
"""
type UserResendConfirmationWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserSendPasswordResetWithToken.
"""
type UserSendPasswordResetWithTokenPayload {
  message: String!
}

"""
Autogenerated return type of UserUpdatePasswordWithToken.
"""
type UserUpdatePasswordWithTokenPayload {
  authenticatable: Authenticatable!

  """
  Authentication credentials. Resource must be signed_in for credentials to be returned.
  """
  credentials: Credential
}
